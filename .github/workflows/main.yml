name: Build

on:
  push:
    branches:
      - main


jobs:
  build:
    name: Build and analyze
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

      - name: Install jq
        run: sudo apt-get install -y jq

      - name: Send SonarQube analysis to Slack
        if: always()
        run: |
          quality_gate_status=$(curl -s -u ${{ secrets.SONAR_TOKEN }} ${{ secrets.SONAR_HOST_URL }}/api/qualitygates/project_status?projectKey=your_project_key | jq -r '.projectStatus.status')
          coverage=$(curl -s -u ${{ secrets.SONAR_TOKEN }} ${{ secrets.SONAR_HOST_URL }}/api/measures/component?componentKey=your_project_key&metricKeys=coverage | jq -r '.component.measures[0].value')
          duplication=$(curl -s -u ${{ secrets.SONAR_TOKEN }} ${{ secrets.SONAR_HOST_URL }}/api/measures/component?componentKey=your_project_key&metricKeys=duplicated_lines_density | jq -r '.component.measures[0].value')
          reliability=$(curl -s -u ${{ secrets.SONAR_TOKEN }} ${{ secrets.SONAR_HOST_URL }}/api/measures/component?componentKey=your_project_key&metricKeys=reliability_rating | jq -r '.component.measures[0].value')
          security=$(curl -s -u ${{ secrets.SONAR_TOKEN }} ${{ secrets.SONAR_HOST_URL }}/api/measures/component?componentKey=your_project_key&metricKeys=security_rating | jq -r '.component.measures[0].value')
          maintainability=$(curl -s -u ${{ secrets.SONAR_TOKEN }} ${{ secrets.SONAR_HOST_URL }}/api/measures/component?componentKey=your_project_key&metricKeys=sqale_rating | jq -r '.component.measures[0].value')
          hotspots=$(curl -s -u ${{ secrets.SONAR_TOKEN }} ${{ secrets.SONAR_HOST_URL }}/api/measures/component?componentKey=your_project_key&metricKeys=vulnerabilities | jq -r '.component.measures[0].value')

          payload=$(jq -n --arg qgs "$quality_gate_status" --arg cov "$coverage" --arg dup "$duplication" --arg rel "$reliability" --arg sec "$security" --arg main "$maintainability" --arg hs "$hotspots" \
          '{
            text: "SonarQube Analysis Report:\n*Quality Gate Status:* \($qgs)\n*Coverage:* \($cov)%\n*Duplication:* \($dup)%\n*Reliability:* \($rel)\n*Security:* \($sec)\n*Maintainability:* \($main)\n*Hotspots Reviewed:* \($hs)"
          }')

          curl -X POST -H 'Content-type: application/json' --data "$payload" ${{ secrets.SLACK_WEBHOOK_URL }}
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

