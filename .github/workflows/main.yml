name: Build

on:
  push:
    branches:
      - main

jobs:
  build:
    name: Build and analyze
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

      - name: Install jq
        run: sudo apt-get install -y jq

      - name: Send SonarQube analysis to Slack
        if: always()
        run: |
          project_key="testsq"
          sonar_host="${{ secrets.SONAR_HOST_URL }}"
          sonar_token="${{ secrets.SONAR_TOKEN }}"

          # Fetch Quality Gate Status
          quality_gate_status=$(curl -s -u $sonar_token: $sonar_host/api/qualitygates/project_status?projectKey=$project_key | jq -r '.projectStatus.status')
          echo "Quality Gate Status: $quality_gate_status"

          # Fetch individual metrics
          metrics=("coverage" "duplicated_lines_density" "reliability_rating" "security_rating" "sqale_rating" "vulnerabilities")
          results=()

          for metric in "${metrics[@]}"; do
            result=$(curl -s -u $sonar_token: $sonar_host/api/measures/component?component=$project_key\&metricKeys=$metric | jq -r '.component.measures[0].value')
            echo "$metric: $result"
            results+=("$result")
          done

          coverage="${results[0]}"
          duplication="${results[1]}"
          reliability="${results[2]}"
          security="${results[3]}"
          maintainability="${results[4]}"
          hotspots="${results[5]}"

          # Construct the payload for Slack
          payload=$(jq -n --arg qgs "$quality_gate_status" --arg cov "$coverage" --arg dup "$duplication" --arg rel "$reliability" --arg sec "$security" --arg main "$maintainability" --arg hs "$hotspots" \
          '{
            text: "SonarQube Analysis Report:\n*Quality Gate Status:* \($qgs)\n*Coverage:* \($cov)%\n*Duplication:* \($dup)%\n*Reliability:* \($rel)\n*Security:* \($sec)\n*Maintainability:* \($main)\n*Hotspots Reviewed:* \($hs)"
          }')

          # Send the payload to Slack
          curl -X POST -H 'Content-type: application/json' --data "$payload" ${{ secrets.SLACK_WEBHOOK_URL }}
